"SELECT ID, CAS, property, value, endpoint_unit FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(ID = as.numeric(ID),
value = as.numeric(value)) %>%
spread(key = property, value = value) %>%
select(CAS, `HL in water`, `log Kow`, `Molar mass [Da]`, `endpoint_unit`)
head(sub_props)
str(sub_props)
sub_props[!is.na(`log Kow`), ]
sub_props[!is.na(sub_props$`log Kow`), ]
sub_props[!is.na(sub_props$`HL in water`), ]
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value, endpoint_unit FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(ID = as.numeric(ID),
value = as.numeric(value))
sub_props[is.na(sub_props$value), ]
sub_props[is.na(sub_props$value), ] %>% select(property)
sub_props[is.na(sub_props$value), ] %>% select(property) %>% unique()
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value, endpoint_unit FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(ID = as.numeric(ID),
value = as.numeric(value)) %>%
spread(key = property, value = value) %>%
select(CAS, `HL in water`, `log Kow`, `Molar mass [Da]`, `endpoint_unit`)
rm(measr)
## joining data ##
measr <- left_join(measurements_mapping, measurements , by = c("station_co" = "Station_Code")) %>%
left_join(geo_hydro, by = "SUBID") %>%
left_join(demo, by = c("SUBID" = "SC")) %>%
left_join(sub_props, by = c("CAS_No" = "CAS"))
str(measr)
glimpse(measr)
# Kevin Ouwerkerk
# 2019-11-18
# Loading libraries -------------------------------------------------------
library(tidyverse)
library(readxl)
library(RSQLite)
# Loading data ------------------------------------------------------------
geo_hydro <- read_tsv("data/raw/GeoData.txt") %>%
filter(HAROID == 9600704)
measurements <- read_excel(path = "data/raw/JDS_Query met pivot.xlsx", sheet = "DBQuery") %>%
select(Station_Code, Substance, CAS_No, H_Unit, `Data value`) %>% rename(subs_value = `Data value`)
measurements_mapping <- read_csv2(file = "data/raw/MappingJDS_Define.csv") %>%
filter(HAROID == 9600704) %>%
select(station_co, SUBID, distance_t, CumAreakkm2, AREA)
demo <- read_excel(path = "data/raw/copy_locators_hypefinal_Nov2017.xlsx", sheet = "locators") %>%
select(SC, CountryCorrFinal, GDPEP)
conn <- dbConnect(RSQLite::SQLite(), "data/raw/substance_properties.db")
dbListTables(conn)
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value, endpoint_unit FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(ID = as.numeric(ID),
value = as.numeric(value)) %>%
spread(key = property, value = value) %>%
select(CAS, `HL in water`, `log Kow`, `Molar mass [Da]`, `endpoint_unit`)
## joining data ##
measr <- left_join(measurements_mapping, measurements , by = c("station_co" = "Station_Code")) %>%
left_join(geo_hydro, by = "SUBID") %>%
left_join(demo, by = c("SUBID" = "SC")) %>%
left_join(sub_props, by = c("CAS_No" = "CAS"))
glimpse(measr)
glimpse(demo)
glimpse(measurements)
glimpse(measurements_mapping)
glimpse(geo_hydro)
# Kevin Ouwerkerk
# 2019-11-18
# Loading libraries -------------------------------------------------------
library(tidyverse)
library(readxl)
library(RSQLite)
# Loading data ------------------------------------------------------------
geo_hydro <- read_tsv("data/raw/GeoData.txt") %>%
filter(HAROID == 9600704)
measurements <- read_excel(path = "data/raw/JDS_Query met pivot.xlsx", sheet = "DBQuery") %>%
select(Station_Code, Substance, CAS_No, H_Unit, `Data value`) %>% rename(subs_value = `Data value`)
measurements_mapping <- read_csv2(file = "data/raw/MappingJDS_Define.csv") %>%
filter(HAROID == 9600704) %>%
select(station_co, SUBID, distance_t, CumAreakkm2)
demo <- read_excel(path = "data/raw/copy_locators_hypefinal_Nov2017.xlsx", sheet = "locators") %>%
select(SC, CountryCorrFinal, GDPEP)
conn <- dbConnect(RSQLite::SQLite(), "data/raw/substance_properties.db")
dbListTables(conn)
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value, endpoint_unit FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(ID = as.numeric(ID),
value = as.numeric(value)) %>%
spread(key = property, value = value) %>%
select(CAS, `HL in water`, `log Kow`, `Molar mass [Da]`, `endpoint_unit`)
## joining data ##
measr <- left_join(measurements_mapping, measurements , by = c("station_co" = "Station_Code")) %>%
left_join(geo_hydro, by = "SUBID") %>%
left_join(demo, by = c("SUBID" = "SC")) %>%
left_join(sub_props, by = c("CAS_No" = "CAS"))
glimpse(measr)
unique(measr$SUBID)
lenhgt(unique(measr$CAS_No))
length(unique(measr$CAS_No))
## joining data ##
data <- left_join(measurements_mapping, measurements , by = c("station_co" = "Station_Code")) %>%
left_join(geo_hydro, by = "SUBID") %>%
left_join(demo, by = c("SUBID" = "SC")) %>%
left_join(sub_props, by = c("CAS_No" = "CAS"))
## writing data to disk ##
write_csv2(data, "data/modified/test-data.csv")
write_rds(data, "data/modified/test-data.rds")
glimpse(data)
glimpse(geo_hydro)
?read_excel
catch <- read_excel("data/raw/NewHypeSchematisation.xlsx", sheet = "CumCat") %>%
select(SUBID, CumCat_km2)
catch
# Kevin Ouwerkerk
# 2019-11-18
# Loading libraries -------------------------------------------------------
library(tidyverse)
library(readxl)
library(RSQLite)
# Loading data ------------------------------------------------------------
geo_hydro <- read_tsv("data/raw/GeoData.txt") %>%
filter(HAROID == 9600704)
catch <- read_excel("data/raw/NewHypeSchematisation.xlsx", sheet = "CumCat") %>%
select(SUBID, CumCat_km2)
measurements <- read_excel(path = "data/raw/JDS_Query met pivot.xlsx", sheet = "DBQuery") %>%
select(Station_Code, Substance, CAS_No, H_Unit, `Data value`) %>% rename(subs_value = `Data value`)
measurements_mapping <- read_csv2(file = "data/raw/MappingJDS_Define.csv") %>%
filter(HAROID == 9600704) %>%
select(station_co, SUBID, distance_t, CumAreakkm2)
demo <- read_excel(path = "data/raw/copy_locators_hypefinal_Nov2017.xlsx", sheet = "locators") %>%
select(SC, CountryCorrFinal, GDPEP)
conn <- dbConnect(RSQLite::SQLite(), "data/raw/substance_properties.db")
dbListTables(conn)
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value, endpoint_unit FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(ID = as.numeric(ID),
value = as.numeric(value)) %>%
spread(key = property, value = value) %>%
select(CAS, `HL in water`, `log Kow`, `Molar mass [Da]`, `endpoint_unit`)
## joining data ##
data <- left_join(measurements_mapping, measurements , by = c("station_co" = "Station_Code")) %>%
left_join(geo_hydro, by = "SUBID") %>%
left_join(catch, by = "SUBID") %>%
left_join(demo, by = c("SUBID" = "SC")) %>%
left_join(sub_props, by = c("CAS_No" = "CAS"))
glimpse(data)
## joining data ##
df <-
left_join(measurements_mapping,
measurements ,
by = c("station_co" = "Station_Code")) %>%
left_join(geo_hydro, by = "SUBID") %>%
left_join(catch, by = "SUBID") %>%
left_join(demo, by = c("SUBID" = "SC")) %>%
left_join(sub_props, by = c("CAS_No" = "CAS")) %>%
select(
HAROID,
MAINDOWN,
SUBID,
CountryCorrFinal,
LAKEREGION,
REGION,
WQPARREG,
POURX,
POURY,
TARGETX,
TARGETY,
CENTERX,
CENTERY,
LATITUDE,
LONGITUDE,
station_co,
Substance,
CAS_No,
endpoint_unit,
H_Unit,
subs_value,
`HL in water`,
`log Kow`,
`Molar mass [Da]`,
AREA,
UPAREA,
RIVLEN,
ELEV_MEAN,
ELEV_STD,
SLOPE_MEAN,
RELIEF,
SLC_1:CumCat_km2,
GDPEP,
distance_t,
CumAreakkm2
)
glimpse(df)
colnames(df)
colnames(data)
colnames(data)[which(!colnames(data) in colnames(df))]
colnames(data)[which(!colnames(data) %in% colnames(df))]
summary(data$BRANCH)
sum(data$BRANCH != 0)
## joining data ##
df <-
left_join(measurements_mapping,
measurements ,
by = c("station_co" = "Station_Code")) %>%
left_join(geo_hydro, by = "SUBID") %>%
left_join(catch, by = "SUBID") %>%
left_join(demo, by = c("SUBID" = "SC")) %>%
left_join(sub_props, by = c("CAS_No" = "CAS")) %>%
select(
HAROID,
MAINDOWN,
SUBID,
CountryCorrFinal,
LAKEREGION,
REGION,
WQPARREG,
POURX,
POURY,
TARGETX,
TARGETY,
CENTERX,
CENTERY,
LATITUDE,
LONGITUDE,
station_co,
Substance,
CAS_No,
endpoint_unit,
H_Unit,
subs_value,
`HL in water`,
`log Kow`,
`Molar mass [Da]`,
AREA,
UPAREA,
RIVLEN,
ELEV_MEAN,
ELEV_STD,
SLOPE_MEAN,
RELIEF,
SLC_1:CumCat_km2,
GDPEP,
distance_t,
CumAreakkm2
)
source('P:/1209104-solutions/JDS_ML/emerging_sub_worldbank_R/scripts/Cleaning_data.R', echo=TRUE)
data
source('P:/1209104-solutions/JDS_ML/emerging_sub_worldbank_R/scripts/Cleaning_data.R', echo=TRUE)
# Kevin Ouwerkerk
# 2019-11-18
# Loading libraries -------------------------------------------------------
library(tidyverse)
library(readxl)
library(RSQLite)
# Loading data ------------------------------------------------------------
geo_hydro <- read_tsv("data/raw/GeoData.txt") %>%
filter(HAROID == 9600704)
catch <- read_excel("data/raw/NewHypeSchematisation.xlsx", sheet = "CumCat") %>%
select(SUBID, CumCat_km2)
measurements <- read_excel(path = "data/raw/JDS_Query met pivot.xlsx", sheet = "DBQuery") %>%
select(Station_Code, Substance, CAS_No, H_Unit, `Data value`) %>% rename(subs_value = `Data value`)
measurements_mapping <- read_csv2(file = "data/raw/MappingJDS_Define.csv") %>%
filter(HAROID == 9600704) %>%
select(station_co, SUBID, distance_t, CumAreakkm2)
demo <- read_excel(path = "data/raw/copy_locators_hypefinal_Nov2017.xlsx", sheet = "locators") %>%
select(SC, CountryCorrFinal, GDPEP)
conn <- dbConnect(RSQLite::SQLite(), "data/raw/substance_properties.db")
dbListTables(conn)
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value, endpoint_unit FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(ID = as.numeric(ID),
value = as.numeric(value)) %>%
spread(key = property, value = value) %>%
select(CAS, `HL in water`, `log Kow`, `Molar mass [Da]`, `endpoint_unit`)
sub_props
measurements_mapping
measurements
# Kevin Ouwerkerk
# 2019-11-18
# Loading libraries -------------------------------------------------------
library(tidyverse)
library(readxl)
library(RSQLite)
# Loading data ------------------------------------------------------------
geo_hydro <- read_tsv("data/raw/GeoData.txt") %>%
filter(HAROID == 9600704)
geo_hydro
catch <- read_excel("data/raw/NewHypeSchematisation.xlsx", sheet = "CumCat") %>%
select(SUBID, CumCat_km2)
catch
catch <- read_excel("data/raw/NewHypeSchematisation.xlsx", sheet = "CumCat")
catch
catch <- read_excel("data/raw/NewHypeSchematisation.xlsx", sheet = "CumCat") %>%
select(SUBID, CumCat_km2)
measurements <- read_excel(path = "data/raw/JDS_Query met pivot.xlsx", sheet = "DBQuery") %>%
select(Station_Code, Substance, CAS_No, H_Unit, `Data value`) %>% rename(subs_value = `Data value`)
measurements
measurements_mapping <- read_csv2(file = "data/raw/MappingJDS_Define.csv") %>%
filter(HAROID == 9600704) %>%
select(station_co, SUBID, distance_t, CumAreakkm2)
measurements_mapping
demo <- read_excel(path = "data/raw/copy_locators_hypefinal_Nov2017.xlsx", sheet = "locators") %>%
select(SC, CountryCorrFinal, GDPEP)
demo
conn <- dbConnect(RSQLite::SQLite(), "data/raw/substance_properties.db")
dbListTables(conn)
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value, endpoint_unit FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(ID = as.numeric(ID),
value = as.numeric(value))
sub_props
head(sub_props)
length(unique(sub_props$CAS))
length(unique(sub_props$property))
3 * 5764
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(ID = as.numeric(ID),
value = as.numeric(value))
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(ID = as.numeric(ID),
value = as.numeric(value)) %>%
spread(key = property, value = value) %>%
select(CAS, `HL in water`, `log Kow`, `Molar mass [Da]`)
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(ID = as.numeric(ID),
value = as.numeric(value)) %>%
spread(key = property, value = value) %>%
select(CAS, `HL in water`, `log Kow`, `Molar mass [Da]`)
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(ID = as.numeric(ID),
value = as.numeric(value))
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(value = as.numeric(value))
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(value = as.numeric(value)) %>%
spread(key = property, value = value)
sub_props <-
dbGetQuery(
conn,
"SELECT CAS, property, value FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(value = as.numeric(value))
sub_props <-
dbGetQuery(
conn,
"SELECT CAS, property, value FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(value = as.numeric(value)) %>%
spread(key = property, value = value)
sub_props <-
dbGetQuery(
conn,
"SELECT CAS, property, value FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(value = as.numeric(value)) %>%
unique()
sub_props <-
dbGetQuery(
conn,
"SELECT CAS, property, value FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(value = as.numeric(value)) %>%
unique() %>%
spread(key = property, value = value)
# Kevin Ouwerkerk
# 2019-11-18
# Loading libraries -------------------------------------------------------
library(tidyverse)
library(readxl)
library(RSQLite)
# Loading data ------------------------------------------------------------
geo_hydro <- read_tsv("data/raw/GeoData.txt") %>%
filter(HAROID == 9600704)
catch <- read_excel("data/raw/NewHypeSchematisation.xlsx", sheet = "CumCat") %>%
select(SUBID, CumCat_km2)
geo_hydro
catch
measurements <- read_excel(path = "data/raw/JDS_Query met pivot.xlsx", sheet = "DBQuery") %>%
select(Station_Code, Substance, CAS_No, H_Unit, `Data value`) %>% rename(subs_value = `Data value`)
measurements
measurements_mapping <- read_csv2(file = "data/raw/MappingJDS_Define.csv") %>%
filter(HAROID == 9600704) %>%
select(station_co, SUBID, distance_t, CumAreakkm2)
measurements_mapping
demo <- read_excel(path = "data/raw/copy_locators_hypefinal_Nov2017.xlsx", sheet = "locators") %>%
select(SC, CountryCorrFinal, GDPEP)
demo
measurements
measurements_mapping
demo
measurements
unique(measurements$CAS_No) %>% length()
conn <- dbConnect(RSQLite::SQLite(), "data/raw/substance_properties.db")
dbListTables(conn)
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(value = as.numeric(value))
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(value = as.numeric(value)) %>%
filter(CAS %in% measurements$CAS_No)
525 * 4
525 * 3
unique(sub_props$CAS) %>% length()
sub_props %>% add_count(CAS) %>% filter(n > 1)
sub_props %>% add_count(CAS) %>% filter(n > 1) %>% arrange(CAS)
sub_props <-
dbGetQuery(
conn,
"SELECT ID, CAS, property, value FROM substance_properties WHERE property IN ('Molar mass [Da]', 'log Kow', 'HL in water')"
) %>%
mutate(value = as.numeric(value)) %>%
filter(CAS %in% measurements$CAS_No) %>%
spread(key = property, value = value) %>%
select(CAS, `HL in water`, `log Kow`, `Molar mass [Da]`)
data <-
left_join(measurements_mapping,
measurements ,
by = c("station_co" = "Station_Code")) %>%
left_join(geo_hydro, by = "SUBID") %>%
left_join(catch, by = "SUBID") %>%
left_join(demo, by = c("SUBID" = "SC")) %>%
#left_join(sub_props, by = c("CAS_No" = "CAS")) %>%
select(
HAROID,
MAINDOWN,
SUBID,
CountryCorrFinal,
LAKEREGION,
REGION,
WQPARREG,
POURX,
POURY,
TARGETX,
TARGETY,
CENTERX,
CENTERY,
LATITUDE,
LONGITUDE,
station_co,
Substance,
CAS_No,
endpoint_unit,
H_Unit,
subs_value,
`HL in water`,
`log Kow`,
`Molar mass [Da]`,
AREA,
UPAREA,
RIVLEN,
ELEV_MEAN,
ELEV_STD,
SLOPE_MEAN,
RELIEF,
SLC_1:CumCat_km2,
GDPEP,
distance_t,
CumAreakkm2
)
sub_props
