library(xgboost)
library(caret)
library(tictoc)
library(h2o)
# Loading data ------------------------------------------------------------
df <- read_rds("data/modified/compact_data.rds") %>%
select(-subs_value) # temporary
# Cleaning data for feature table #
df <- select(df, -SUBID:-Concentration, -valid_measurement, -sub_groups, -censored)  # -subs_value, -censored
# first test removing all missing values (for now) #
df <- na.omit(df)
# create test and training data #
set.seed(1234)
N <- nrow(df)
target <- round(0.75 * N)
gp <- runif(N)
# splitting the data
df_train <- df[gp < 0.75, ]
df_test <- df[gp >= 0.75, ]
# Cross validation Plan #
nRows <- nrow(df)
splitPlan <- kWayCrossValidation(nRows, 3, NULL, NULL)
fmla <- as.formula("subs_value_dl ~ .")
# test model  random forrest #
(subs_model_rf <-
ranger(
formula = fmla,
data = df_train,
num.trees = 500,
respect.unordered.factors = "order"
))
df_test$rf_pred <- predict(subs_model_rf, df_test)$predictions
# RMSE on test data
mutate(df_test, residual = subs_value_dl - rf_pred) %>%
summarise(rmse = sqrt(mean(residual ^2)))
# plot model performance
ggplot(df_test, aes(x = rf_pred, y = subs_value_dl)) +
geom_point() +
geom_abline() +
labs(x ="prediction_rf", y ="concentration (μg/l)")
rf_pred <- df_test$rf_pred
df_test <- select(df_test, -rf_pred)
# test model xgboost #
df_train_xg <- select(df_train, -subs_value_dl)
df_test_xg <- select(df_test, -subs_value_dl)
cv <-
xgb.cv(
data = as.matrix(df_train_xg),
label = df_train$subs_value_dl,
nrounds = 100,
nfold = 5,
objective = "reg:linear",
eta = 0.3,
max_depth = 6,
early_stopping_rounds = 10,
verbose = 0
)
elog <- cv$evaluation_log
elog %>%
summarize(ntrees.train = which.min(train_rmse_mean),   # find the index of min (train_rmse_mean)
ntrees.test  = which.min(test_rmse_mean))
subs_model_xgb <- xgboost(data = as.matrix(df_train_xg),
label = df_train$subs_value_dl,
nrounds = 15,
objective = "reg:linear",
eta = 0.3,
depth = 6,
verbose = 0)
df_test$xgb_pred <- predict(subs_model_xgb, as.matrix(df_test_xg))
mutate(df_test, residual = subs_value_dl - xgb_pred) %>%
summarise(rmse = sqrt(mean(residual ^2)))
ggplot(df_test, aes(x = xgb_pred, y = subs_value_dl)) +
geom_point() +
geom_abline() +
labs(x ="prediction_xgb", y ="concentration (μg/l)")
df_test$rf_pred <- rf_pred
# check both models #
mutate(df_test, residual_rf = subs_value_dl - rf_pred,
residual_xgb = subs_value_dl - xgb_pred) %>%
summarise(rmse_rf = sqrt(mean(residual_rf ^2)),
rmse_xgb = sqrt(mean(residual_xgb ^2)))
# Kevin Ouwerkerk
# 2020-08-18
# Loading libraries -------------------------------------------------------
library(tidyverse)
library(readxl)
library(VIM)
# load data ---------------------------------------------------------------
subs <- read_excel("data/raw/MLos_all substances_calculations_v3_fromWP17.xlsx", sheet = 1, skip = 3)
mod_subs <- read_csv("data/unique_CAS.csv") %>% mutate(CAS = str_remove(CAS, "_cas"))
epa_subs <-
list.files(path = "data/raw/usepa_subs/",
pattern = "*.xlsx",
full.names = TRUE) %>%
map_df( ~ read_xlsx(.)) %>%
select(
CAS = Substance_CASRN,
molw = Structure_MolWt,
biodeg = NCCT_BIODEG,
meltingpoint = NCCT_MP,
halflife = NCCT_HL,
R_biodeg  = NCCT_RBiodeg,
logP = NCCT_LogP,
bcf = NCCT_BCF,
water_solubility = NCCT_WS,
koc = NCCT_KOC,
koa = NCCT_KOA,
boiling_point = NCCT_BP,
km = NCCT_KM,
aoh = NCCT_AOH,
vapore_pressure = NCCT_VP
)
## impute missing data ##
#vis missings
epa_subs %>% aggr(combined = TRUE)
vars_by_NAs <- select(epa_subs, -CAS) %>%
is.na() %>%
colSums() %>%
sort(decreasing = FALSE) %>%
names()
vars_by_NAs <- select(epa_subs, -CAS) %>%
is.na() %>%
colSums() %>%
sort(decreasing = FALSE) %>%
names()
epa_subs %>%
select(all_of(vars_by_NAs)) %>%
kNN(k = 5)
#order missing vars
subs_data <- left_join(mod_subs, epa_subs)
vars_by_NAs <- select(subs_data, -CAS) %>%
is.na() %>%
colSums() %>%
sort(decreasing = FALSE) %>%
names()
subs_data <- subs_data %>%
select(all_of(vars_by_NAs)) %>%
kNN(k = 5,
numFun = weighted.mean,
weightDist = TRUE)
subs_data
subs_data <- subs_data %>%
select(all_of(vars_by_NAs)) %>%
kNN(k = 5,
numFun = weighted.mean,
weightDist = TRUE) %>%
select(-molw_imp:-vapore_pressure_imp)
subs_data <- subs_data %>%
select(all_of(vars_by_NAs)) %>%
kNN(k = 5,
numFun = weighted.mean,
weightDist = TRUE) %>%
select(-molw_imp:-vapore_pressure_imp)
#order missing vars
subs_data <- left_join(mod_subs, epa_subs)
subs_data %>% aggr(combined = TRUE)
vars_by_NAs <- select(subs_data, -CAS) %>%
is.na() %>%
colSums() %>%
sort(decreasing = FALSE) %>%
names()
subs_data <- subs_data %>%
select(all_of(vars_by_NAs)) %>%
kNN(k = 5,
numFun = weighted.mean,
weightDist = TRUE) %>%
select(-molw_imp:-vapore_pressure_imp)
# write data to disk ------------------------------------------------------
write_rds(subs_data, path = "data/modified/subs_data.rds")
source('P:/1209104-solutions/JDS_ML/github_repo_JDS_ML/JDS_ML/emerging_sub_worldbank_R/scripts/Cleaning_data.R', encoding = 'UTF-8', echo=TRUE)
source('P:/1209104-solutions/JDS_ML/github_repo_JDS_ML/JDS_ML/emerging_sub_worldbank_R/scripts/get_sub_props.R', echo=TRUE)
#order missing vars
subs_data <- left_join(mod_subs, epa_subs)
subs_data %>% aggr(combined = TRUE)
vars_by_NAs <- select(subs_data) %>%
is.na() %>%
colSums() %>%
sort(decreasing = FALSE) %>%
names()
subs_data <- subs_data %>%
select(all_of(vars_by_NAs)) %>%
kNN(k = 5,
numFun = weighted.mean,
weightDist = TRUE) %>%
select(-molw_imp:-vapore_pressure_imp)
# write data to disk ------------------------------------------------------
write_rds(subs_data, path = "data/modified/subs_data.rds")
source('P:/1209104-solutions/JDS_ML/github_repo_JDS_ML/JDS_ML/emerging_sub_worldbank_R/scripts/Cleaning_data.R', encoding = 'UTF-8', echo=TRUE)
# Loading libraries -------------------------------------------------------
library(tidyverse)
library(naniar)
library(vtreat)
library(ranger)
library(xgboost)
library(caret)
library(tictoc)
library(h2o)
# Loading data ------------------------------------------------------------
df <- read_rds("data/modified/compact_data.rds") %>%
select(-subs_value) # temporary
# Cleaning data for feature table #
df <- select(df, -SUBID:-Concentration, -valid_measurement, -sub_groups, -censored)  # -subs_value, -censored
# first test removing all missing values (for now) #
df <- na.omit(df)
# create test and training data #
set.seed(1234)
N <- nrow(df)
target <- round(0.75 * N)
gp <- runif(N)
# splitting the data
df_train <- df[gp < 0.75, ]
df_test <- df[gp >= 0.75, ]
# Cross validation Plan #
nRows <- nrow(df)
splitPlan <- kWayCrossValidation(nRows, 3, NULL, NULL)
fmla <- as.formula("subs_value_dl ~ .")
# test model  random forrest #
(subs_model_rf <-
ranger(
formula = fmla,
data = df_train,
num.trees = 500,
respect.unordered.factors = "order"
))
df_test$rf_pred <- predict(subs_model_rf, df_test)$predictions
# RMSE on test data
mutate(df_test, residual = subs_value_dl - rf_pred) %>%
summarise(rmse = sqrt(mean(residual ^2)))
# plot model performance
ggplot(df_test, aes(x = rf_pred, y = subs_value_dl)) +
geom_point() +
geom_abline() +
labs(x ="prediction_rf", y ="concentration (μg/l)")
rf_pred <- df_test$rf_pred
df_test <- select(df_test, -rf_pred)
# test model xgboost #
df_train_xg <- select(df_train, -subs_value_dl)
df_test_xg <- select(df_test, -subs_value_dl)
cv <-
xgb.cv(
data = as.matrix(df_train_xg),
label = df_train$subs_value_dl,
nrounds = 100,
nfold = 5,
objective = "reg:linear",
eta = 0.3,
max_depth = 6,
early_stopping_rounds = 10,
verbose = 0
)
elog <- cv$evaluation_log
elog %>%
summarize(ntrees.train = which.min(train_rmse_mean),   # find the index of min (train_rmse_mean)
ntrees.test  = which.min(test_rmse_mean))
subs_model_xgb <- xgboost(data = as.matrix(df_train_xg),
label = df_train$subs_value_dl,
nrounds = 15,
objective = "reg:linear",
eta = 0.3,
depth = 6,
verbose = 0)
df_test$xgb_pred <- predict(subs_model_xgb, as.matrix(df_test_xg))
mutate(df_test, residual = subs_value_dl - xgb_pred) %>%
summarise(rmse = sqrt(mean(residual ^2)))
ggplot(df_test, aes(x = xgb_pred, y = subs_value_dl)) +
geom_point() +
geom_abline() +
labs(x ="prediction_xgb", y ="concentration (μg/l)")
df_test$rf_pred <- rf_pred
# check both models #
mutate(df_test, residual_rf = subs_value_dl - rf_pred,
residual_xgb = subs_value_dl - xgb_pred) %>%
summarise(rmse_rf = sqrt(mean(residual_rf ^2)),
rmse_xgb = sqrt(mean(residual_xgb ^2)))
df
# Kevin Ouwerkerk
# 2020-08-18
# Loading libraries -------------------------------------------------------
library(tidyverse)
library(readxl)
library(VIM)
# load data ---------------------------------------------------------------
subs <- read_excel("data/raw/MLos_all substances_calculations_v3_fromWP17.xlsx", sheet = 1, skip = 3)
mod_subs <- read_csv("data/unique_CAS.csv") %>% mutate(CAS = str_remove(CAS, "_cas"))
epa_subs <-
list.files(path = "data/raw/usepa_subs/",
pattern = "*.xlsx",
full.names = TRUE) %>%
map_df( ~ read_xlsx(.)) %>%
select(
CAS = Substance_CASRN,
molw = Structure_MolWt,
biodeg = NCCT_BIODEG,
meltingpoint = NCCT_MP,
halflife = NCCT_HL,
R_biodeg  = NCCT_RBiodeg,
logP = NCCT_LogP,
bcf = NCCT_BCF,
water_solubility = NCCT_WS,
koc = NCCT_KOC,
koa = NCCT_KOA,
boiling_point = NCCT_BP,
km = NCCT_KM,
aoh = NCCT_AOH,
vapore_pressure = NCCT_VP
)
## impute missing data ##
#vis missings
epa_subs %>% aggr(combined = TRUE)
epa_subs <-
list.files(path = "data/raw/usepa_subs/",
pattern = "*.xlsx",
full.names = TRUE) %>%
map_df( ~ read_xlsx(.)) %>%
select(
CAS = Substance_CASRN,
molw = Structure_MolWt,
biodeg = NCCT_BIODEG,
meltingpoint = NCCT_MP,
halflife = NCCT_HL,
R_biodeg  = NCCT_RBiodeg,
logP = NCCT_LogP,
bcf = NCCT_BCF,
water_solubility = NCCT_WS,
koc = NCCT_KOC,
koa = NCCT_KOA,
boiling_point = NCCT_BP,
km = NCCT_KM,
aoh = NCCT_AOH,
vapore_pressure = NCCT_VP
)
## impute missing data ##
#vis missings
epa_subs %>% aggr(combined = TRUE)
bind_rows(epa_subs, mod_subs)
## impute missing data ##
distinct(bind_rows(epa_subs, mod_subs))
## impute missing data ##
# combine al substances
epa_subs <- distinct(bind_rows(epa_subs, mod_subs))
#vis missings
epa_subs %>% aggr(combined = TRUE)
library(missForest)
install.packages("missForest")
missForest(epa_subs)
library(missForest)
missForest(epa_subs)
warnings()
epa_subs
missForest(epa_subs, variablewise = TRUE)
length(epa_subs$CAS)
length(epa_subs$molw)
length(epa_subs$biodeg)
length(epa_subs$meltingpoint)
length(epa_subs$vapore_pressure)
select(epa_subs, -CAS) %>% missForest(variablewise = TRUE)
?missForest
#order missing vars
subs_data <- left_join(mod_subs, epa_subs)
missForest(subs_data)
# Kevin Ouwerkerk
# 2020-08-18
# Loading libraries -------------------------------------------------------
library(tidyverse)
library(readxl)
library(VIM)
library(missForest)
# load data ---------------------------------------------------------------
subs <- read_excel("data/raw/MLos_all substances_calculations_v3_fromWP17.xlsx", sheet = 1, skip = 3)
mod_subs <- read_csv("data/unique_CAS.csv") %>% mutate(CAS = str_remove(CAS, "_cas"))
epa_subs <-
list.files(path = "data/raw/usepa_subs/",
pattern = "*.xlsx",
full.names = TRUE) %>%
map_df( ~ read_xlsx(.)) %>%
select(
CAS = Substance_CASRN,
molw = Structure_MolWt,
biodeg = NCCT_BIODEG,
meltingpoint = NCCT_MP,
halflife = NCCT_HL,
R_biodeg  = NCCT_RBiodeg,
logP = NCCT_LogP,
bcf = NCCT_BCF,
water_solubility = NCCT_WS,
koc = NCCT_KOC,
koa = NCCT_KOA,
boiling_point = NCCT_BP,
km = NCCT_KM,
aoh = NCCT_AOH,
vapore_pressure = NCCT_VP
)
## impute missing data ##
# combine al substances
epa_subs <- distinct(bind_rows(epa_subs, mod_subs))
#vis missings
epa_subs %>% aggr(combined = TRUE)
class(epa_subs)
epa_subs <-
list.files(path = "data/raw/usepa_subs/",
pattern = "*.xlsx",
full.names = TRUE) %>%
map_df( ~ read_xlsx(.)) %>%
select(
CAS = Substance_CASRN,
molw = Structure_MolWt,
biodeg = NCCT_BIODEG,
meltingpoint = NCCT_MP,
halflife = NCCT_HL,
R_biodeg  = NCCT_RBiodeg,
logP = NCCT_LogP,
bcf = NCCT_BCF,
water_solubility = NCCT_WS,
koc = NCCT_KOC,
koa = NCCT_KOA,
boiling_point = NCCT_BP,
km = NCCT_KM,
aoh = NCCT_AOH,
vapore_pressure = NCCT_VP
)
## impute missing data ##
# combine al substances
epa_subs <- distinct(bind_rows(epa_subs, mod_subs))
#vis missings
epa_subs %>% aggr(combined = TRUE)
epa_subs <-
list.files(path = "data/raw/usepa_subs/",
pattern = "*.xlsx",
full.names = TRUE) %>%
map_df( ~ read_xlsx(.)) %>%
select(
CAS = Substance_CASRN,
molw = Structure_MolWt,
biodeg = NCCT_BIODEG,
meltingpoint = NCCT_MP,
halflife = NCCT_HL,
R_biodeg  = NCCT_RBiodeg,
logP = NCCT_LogP,
bcf = NCCT_BCF,
water_solubility = NCCT_WS,
koc = NCCT_KOC,
koa = NCCT_KOA,
boiling_point = NCCT_BP,
km = NCCT_KM,
aoh = NCCT_AOH,
vapore_pressure = NCCT_VP
)
list.files(path = "data/raw/usepa_subs/",
pattern = "*.xlsx",
full.names = TRUE)
# Kevin Ouwerkerk
# 2020-08-18
# Loading libraries -------------------------------------------------------
library(tidyverse)
library(readxl)
library(VIM)
library(missForest)
# load data ---------------------------------------------------------------
subs <- read_excel("data/raw/MLos_all substances_calculations_v3_fromWP17.xlsx", sheet = 1, skip = 3)
mod_subs <- read_csv("data/unique_CAS.csv") %>% mutate(CAS = str_remove(CAS, "_cas"))
epa_subs <-
list.files(path = "data/raw/usepa_subs/",
pattern = "*.xlsx",
full.names = TRUE) %>%
map_df( ~ read_xlsx(.)) %>%
select(
CAS = Substance_CASRN,
molw = Structure_MolWt,
biodeg = NCCT_BIODEG,
meltingpoint = NCCT_MP,
halflife = NCCT_HL,
R_biodeg  = NCCT_RBiodeg,
logP = NCCT_LogP,
bcf = NCCT_BCF,
water_solubility = NCCT_WS,
koc = NCCT_KOC,
koa = NCCT_KOA,
boiling_point = NCCT_BP,
km = NCCT_KM,
aoh = NCCT_AOH,
vapore_pressure = NCCT_VP
)
## impute missing data ##
# combine al substances
epa_subs <- distinct(bind_rows(epa_subs, mod_subs))
vars_by_NAs <- select(epa_subs, CAS) %>%
is.na() %>%
colSums() %>%
sort(decreasing = FALSE) %>%
names()
epa_subs %>%
select(all_of(vars_by_NAs)) %>%
kNN(k = 5)
vars_by_NAs <- select(epa_subs) %>%
is.na() %>%
colSums() %>%
sort(decreasing = FALSE) %>%
names()
epa_subs %>%
select(all_of(vars_by_NAs)) %>%
kNN(k = 5)
vars_by_NAs <- epa_subs %>%
is.na() %>%
colSums() %>%
sort(decreasing = FALSE) %>%
names()
vars_by_NAs
epa_subs %>%
select(all_of(vars_by_NAs))
epa_subs %>%
select(all_of(vars_by_NAs)) %>%
kNN(k = 5)
